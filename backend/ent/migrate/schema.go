// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DispensesColumns holds the columns for the "dispenses" table.
	DispensesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "note", Type: field.TypeString},
		{Name: "drug_dispenses", Type: field.TypeInt, Nullable: true},
		{Name: "patient_dispenses", Type: field.TypeInt, Nullable: true},
		{Name: "user_dispenses", Type: field.TypeInt, Nullable: true},
	}
	// DispensesTable holds the schema information for the "dispenses" table.
	DispensesTable = &schema.Table{
		Name:       "dispenses",
		Columns:    DispensesColumns,
		PrimaryKey: []*schema.Column{DispensesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "dispenses_drugs_dispenses",
				Columns: []*schema.Column{DispensesColumns[2]},

				RefColumns: []*schema.Column{DrugsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "dispenses_patients_dispenses",
				Columns: []*schema.Column{DispensesColumns[3]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "dispenses_users_dispenses",
				Columns: []*schema.Column{DispensesColumns[4]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DrugsColumns holds the columns for the "drugs" table.
	DrugsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DrugsTable holds the schema information for the "drugs" table.
	DrugsTable = &schema.Table{
		Name:        "drugs",
		Columns:     DrugsColumns,
		PrimaryKey:  []*schema.Column{DrugsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "firstname", Type: field.TypeString},
		{Name: "lastname", Type: field.TypeString},
		{Name: "cardid", Type: field.TypeString},
		{Name: "allergic", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt},
		{Name: "brithday", Type: field.TypeTime},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DispensesTable,
		DrugsTable,
		PatientsTable,
		UsersTable,
	}
)

func init() {
	DispensesTable.ForeignKeys[0].RefTable = DrugsTable
	DispensesTable.ForeignKeys[1].RefTable = PatientsTable
	DispensesTable.ForeignKeys[2].RefTable = UsersTable
}
